<?php

require_once drupal_get_path('module', 'unl') . '/includes/common.php';

/**
 * Implements hook_enable().
 */
function unl_cas_enable() {
  variable_set('user_register', 0);
}

/**
 * Implements hook_init().
 */
function unl_cas_init() {
  // If no one is claiming to be logged in while no one is actually logged in, we don't need CAS.
  if (!array_key_exists('unl_sso', $_COOKIE) && user_is_anonymous()) {
    return;
  }

  // The current request is to the validation URL, we don't want to redirect while a login is pending.
  if (request_path() == 'user/cas') {
    return;
  }

  // If the user's CAS service ticket is expired, and their drupal session hasn't,
  // redirect their next GET request to CAS to keep their CAS session active.
  // However, if their drupal session expired (and they're now anonymous), redirect them regardless.
  $cas = unl_cas_get_adapter();
  if ($cas->isTicketExpired() && ($_SERVER['REQUEST_METHOD'] == 'GET' || user_is_anonymous())) {
    $cas->setGateway();
    unset($_GET['destination']);
    drupal_goto($cas->getLoginUrl());
  }
}

/**
 * Sets up an instance of Unl_Cas
 *
 * @return Unl_Cas
 */
function unl_cas_get_adapter() {
  unl_load_zend_framework();

  // Start the session because if drupal doesn't then Zend_Session will.
  drupal_session_start();
  static $adapter;
  if (!$adapter) {
    if (variable_get('https', FALSE)) {
      $url = url('user/cas', array('absolute' => TRUE, 'query' => drupal_get_destination(), 'https' => TRUE));
    } else {
      $url = url('user/cas', array('absolute' => TRUE, 'query' => drupal_get_destination()));
    }
    $adapter = new Unl_Cas($url, 'https://login.unl.edu/cas');
  }
  return $adapter;
}

/**
 * Implements hook_menu().
 */
function unl_cas_menu() {
  $items['user/cas'] = array(
    'title'           => 'UNL CAS Validation',
    'page callback'   => 'unl_cas_validate_ticket',
    'access callback' => TRUE,
  );

  $items['admin/people/import'] = array(
    'title'            => 'Import User from UNL Directory',
    'description'      => 'Import a user from the UNL Directory',
    'access arguments' => array('administer users'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('unl_cas_user_import'),
    'type'             => MENU_LOCAL_ACTION,
    'file'             => 'unl_cas.admin.inc',
    'weight'           => 1,
  );

  $items['admin/config/people/unl_cas'] = array(
    'title'            => 'UNL CAS',
    'description'      => 'Configure the UNL CAS module',
    'access callback'  => 'unl_user_is_administrator',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('unl_cas_config'),
    'file'             => 'unl_cas.admin.inc',
    'weight'           => 1,
  );

  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function unl_cas_menu_alter(&$items) {
  $items['admin/people/create']['weight'] = 2;
  $items['admin/people/create']['title'] .= ' manually';
  $items['admin/people/create']['access arguments'] = array('administer permissions');

}

/**
 * Validates CAS ticket
 */
function unl_cas_validate_ticket() {
  $cas = unl_cas_get_adapter();

  if (array_key_exists('logoutRequest', $_POST)) {
    $cas->handleLogoutRequest($_POST['logoutRequest']);
  }

  $auth = $cas->validateTicket();

  if ($auth) {
    $username = $cas->getUsername();
    $user = unl_cas_import_user($username);

    if ($GLOBALS['user']->uid != $user->uid) {
      $GLOBALS['user'] = $user;
      user_login_finalize();
    }
  }
  else {
    if (!user_is_anonymous()) {
      $GLOBALS['user'] = drupal_anonymous_user();
      user_login_finalize();
    }
    setcookie('unl_sso', 'fake', time() - 60 * 60 * 24, '/', '.unl.edu');
  }

  $destination = drupal_get_destination();
  unset($_GET['destination']);
  drupal_goto($destination['destination']);
}

/**
 * Implements hook_form_alter().
 */
function unl_cas_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_login') {
    $cas = unl_cas_get_adapter();
    unset($_GET['destination']);
    drupal_goto($cas->getLoginUrl());
  }

  if ($form_id == 'user_profile_form') {
    if (isset($form['account']['name'])) {
      $form['account']['name']['#type'] = 'hidden';
    }

    $form['account']['pass']['#type'] = 'hidden';
    $form['account']['current_pass_required_values']['#type'] = 'hidden';
    $form['account']['current_pass']['#type'] = 'hidden';

    $form['picture']['#description'] = 'To change your picture, visit <a href="https://planetred.unl.edu/pg/profile/unl_' . $GLOBALS['user']->name . '">Planet Red</a>.';
    $form['picture']['picture_delete']['#type'] = 'hidden';
    $form['picture']['picture_upload']['#type'] = 'hidden';

    // Disable checking the current password when changing email.
    if ($validate_password_index = array_search('user_validate_current_pass', $form['#validate']) !== FALSE) {
      unset($form['#validate'][$validate_password_index]);
    }

    $form['#validate'][] = 'unl_cas_user_profile_form_validate';
  }

  if ($form_id == 'user_pass') {
    $form['message'] = array(
      '#prefix' => '<p>',
      '#markup' => t('To reset your password, go somewhere else!'),
      '#suffix' => '</p>'
    );

    unset($form['name']);
    unset($form['mail']);
    unset($form['actions']);
    $form['#validate'] = array();
    $form['#submit'] = array();

    drupal_goto('https://id.unl.edu/user/userForgotPassword.jsp');
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 * Make sure there's no funny business with somebody trying to change a password when we're using CAS.
 */
function unl_cas_user_profile_form_validate(&$form, &$form_state, $form_id = '') {
  if ($form_state['values']['pass']) {
    form_set_error('current_pass', t('Password changes are not allowed when CAS is enabled!'));
  }
}

/**
 * Implements hook_user_logout().
 */
function unl_cas_user_logout($account) {
  session_destroy();
  $cas = unl_cas_get_adapter();
  drupal_goto($cas->getLogoutUrl(url('<front>', array('absolute' => TRUE))));
}

/**
 * Generates and saves a user using info from LDAP or Directory
 */
function unl_cas_import_user($username) {
  unl_load_zend_framework();
  $user = array();

  // First, try getting the info from LDAP.
  try {
    $ldap = new Unl_Ldap(unl_cas_get_setting('ldap_uri'));
    $ldap->bind(unl_cas_get_setting('ldap_dn'), unl_cas_get_setting('ldap_password'));
    $results = $ldap->search('dc=unl,dc=edu', 'uid=' . $username);
    if (count($results) > 0) {
      $result = $results[0];

      $user['firstName'] = $result['givenname'][0];
      $user['lastName'] = $result['sn'][0];
      $user['email'] = $result['mail'][0];
      $user['displayName'] = $result['displayname'][0];
    }
  }
  catch (Exception $e) {
    // don't do anything, just go on to try the peoplefinder method
  }

  // Next, if LDAP didn't work, try peoplefinder/directory service.
  if (!isset($user['email'])) {
    $xml = @file_get_contents('http://directory.unl.edu/service.php?format=xml&uid=' . $username);
    if ($xml) {
      $dom = new DOMDocument();
      $dom->loadXML($xml);
      $user['firstName'] = $dom->getElementsByTagName('givenName')->item(0)->textContent;
      $user['lastName'] = $dom->getElementsByTagName('sn')->item(0)->textContent;
      $user['email'] = $dom->getElementsByTagName('mail')->item(0)->textContent;
      $user['displayName'] = $dom->getElementsByTagName('displayName')->item(0)->textContent;
    }
  }

  // Finally, if peoplefinder didn't work either, just guess.
  if (!isset($user['email'])) {
    $user['email'] = $username . '@unl.edu';
  }

  $userData = array(
    'name'     => $username,
    'mail'     => $user['email'],
    'status'   => 1,
    'timezone' => variable_get('date_default_timezone', @date_default_timezone_get()),
  );

  $account = user_load_by_name($username);

  return user_save($account, $userData);
}

/**
 * Implements hook_user_presave().
 *
 * On non-default sites, only allow users who are administrators on the default
 * to be administrators.  Also, automatically make users who are administrators
 * on the default site an administrator on non-default sites.
 */
function unl_cas_user_presave(&$edit, $account, $category) {
  if (conf_path() == 'sites/default') {
    return;
  }

  if (isset($account->name)) {
    $username = $account->name;
  }
  else {
    $username = $edit['name'];
  }

  $local_admin_role_id = unl_shared_variable_get('user_admin_role');

  if (_unl_cas_is_user_default_site_administrator($username)) {
    $local_admin_role = user_role_load($local_admin_role_id);
    if (!isset($edit['roles']) && isset($account->roles)) {
      $edit['roles'] = $account->roles;
    }
    $edit['roles'][$local_admin_role_id] = $local_admin_role->name;
  }
  else {
    unset($edit['roles'][$local_admin_role_id]);
  }
}

/**
 * Implements hook_user_login().
 *
 * On non-default sites, if a user with the administrator role logs in, verify
 * that they are still an admin in the default site.  If not, remove them from
 * the role.
 */
function unl_cas_user_login(&$edit, $account) {
  if (conf_path() == 'sites/default') {
    return;
  }

  if (!in_array(unl_shared_variable_get('user_admin_role'), array_keys($account->roles))) {
    return;
  }

  $edit = array(
    'roles' => $account->roles,
  );
  user_save($account, $edit);
}

/**
 * Determines if given user has the administrator role on the master/root site of a multisite setup.
 */
function _unl_cas_is_user_default_site_administrator($username) {
  $shared_prefix = unl_get_shared_db_prefix();
  $shared_admin_role_id = unl_shared_variable_get('user_admin_role');
  $shared_admin_usernames = db_query("SELECT u.name FROM {$shared_prefix}users AS u JOIN {$shared_prefix}users_roles AS r ON u.uid = r.uid WHERE name=:name AND rid=:rid", array(':name' => $username, ':rid' => $shared_admin_role_id))->fetchCol();
  return count($shared_admin_usernames) > 0;
}

/**
 * Implements template_preprocess_user_picture().
 */
function unl_cas_preprocess_user_picture(&$variables) {
  //Default image: https://planetred.unl.edu/mod/profile/graphics/defaultmedium.gif
  if ($variables['account']->uid == 0) {
    $variables['user_picture'] = '<img class="profile_pic medium" src="http://planetred.unl.edu/mod/profile/graphics/defaultmedium.gif" alt="Photo placeholder for unspecified user" />';
    return;
  }
  $username = $variables['account']->name;
  $variables['user_picture'] = '<img class="profile_pic medium" src="https://planetred.unl.edu/pg/icon/unl_' . $username . '/medium" alt="' . $username . '\'s photo" />';
}

function unl_cas_get_setting($name, $default = NULL) {
  $data = db_select('unl_cas_settings', 's')
    ->fields('s', array('value'))
    ->condition('s.name', $name)
    ->execute()
    ->fetchCol();
  if (count($data) > 0) {
    return unserialize($data[0]);
  }
  return $default;
}

function unl_cas_set_setting($name, $value) {
  $value = serialize($value);
  if (unl_cas_get_setting($name, '__foobar__') == '__foobar__') {
    db_insert('unl_cas_settings')
      ->fields(array('name', 'value'))
      ->values(array($name, $value))
      ->execute();
  }
  else {
    db_update('unl_cas_settings')
      ->fields(array('value' => $value))
      ->condition('name', $name)
      ->execute();
  }
}
