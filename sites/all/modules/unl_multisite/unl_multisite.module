<?php

require_once  drupal_get_path('module', 'unl') . '/includes/common.php';

/**
 * Implements hook_block_info()
 */
function unl_multisite_block_info() {
  $blocks = array();

  $blocks['my_sites'] = array(
    'info' => 'My Sites',
    'cache' => DRUPAL_CACHE_PER_USER,
  );

  return $blocks;
}

/**
 * Implements hook_block_view()
 */
function unl_multisite_block_view($delta = '') {
  switch ($delta) {
    case 'my_sites':
      return unl_multisite_block_view_my_sites();
      break;
    default:
      return array();
  }
}

/**
 * Implements hook_block_view('my_sites').
 * Displays the list of sites/roles for the current user.
 */
function unl_multisite_block_view_my_sites() {
  if (user_is_anonymous()) {
    return array();
  }

  require_once 'unl_site_creation.php';

  $block = array();
  $block['content'] = _unl_get_user_audit_content($GLOBALS['user']->name);

  return $block;
}

/**
 * Implementation of hook_cron().
 */
function unl_multisite_cron() {
  _unl_multisite_cron_import_wdn_registry_sites();
}

/**
 * Implementation of hook_mail().
 */
function unl_multisite_mail($key, &$message, $params) {
  if ($key == 'site_created') {
    $site = $params['site'];
    $uri = $site->uri;
    $site_admin = $site->site_admin;
    $department = $site->department;

    $message['subject'] = 'New UNLcms site for ' . $department;
    $message['body'][] = <<<EOF
To $site_admin,

Thank you for registering your site at UNLcms. You may now log in using your myUNL information by clicking the link below or copying and pasting it to your browser:

$uri
You must log in in order manage your web site and edit the content. The "Login" link is at the top of the page and you log in using your myUNL information.

For information on how to manage your site & content, please view the online how-to videos found in the menu at the top of the following page, within the category of "Get Help":

http://unlcms.unl.edu

When this new site was created, an attempt was made to copy the content from your current site to this new site. You will want to review all of the content to verify that it is complete and that it is presented correctly.  This import process is dependent on the current's site using and adherence to UNL Templates.

Once your content has been finalized and your are ready to go public with your new site, please contact us to activate the proper public URL (cleaner and shorter). This current URL you've been given will not be indexed or found in search engines until the proper public URL has been established.

Please let us know if you have suggestions or questions.

Thank you,
EOF;

  }
}

/**
 * Implementation of hook_menu().
 */
function unl_multisite_menu() {
  $items = array();

  $items['mysites'] = array(
    'title' => 'My Sites',
    'description' => 'Your sites.',
    'access callback' => 'user_is_logged_in',
    'page callback' => 'unl_multisite_block_view_my_sites',
  );
  $items['admin/sites/unl'] = array(
    'title' => 'Site Management',
    'description' => 'Create and manage sites and aliases.',
    'access arguments' => array('unl site creation'),
    'page callback' => 'unl_sites_page',
    'weight' => -20,
    'file' => 'unl_site_creation.php',
  );
  $items['admin/sites/unl/sites'] = array(
    'title' => 'Sites',
    'description' => 'Create and manage UNL Drupal sites.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -8,
  );
  $items['admin/sites/unl/sites/add'] = array(
    'title' => 'Create site',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('unl_site_create', 'add'),
    'access arguments' => array('unl site creation'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'unl_site_creation.php',
  );
  $items['admin/sites/unl/%/edit'] = array(
    'title' => 'Edit site',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('unl_site_edit', 3),
    'access arguments' => array('unl site creation'),
    'file' => 'unl_site_creation.php',
  );
  $items['admin/sites/unl/%/delete'] = array(
    'title' => 'Delete site',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('unl_site_delete_confirm', 3),
    'access arguments' => array('unl site creation'),
    'file' => 'unl_site_creation.php',
  );
  $items['admin/sites/unl/aliases'] = array(
    'title' => 'Aliases',
    'description' => 'Manage aliases of UNL Drupal sites.',
    'access arguments' => array('unl site creation'),
    'page callback' => 'unl_aliases_page',
    'type' => MENU_LOCAL_TASK,
    'file' => 'unl_site_creation.php',
  );
  $items['admin/sites/unl/%/aliases'] = array(
    'title' => 'Aliases',
    'description' => 'Manage aliases of specified site.',
    'access arguments' => array('unl site creation'),
    'page callback' => 'unl_aliases_page',
    'page arguments' => array(3),
    'file' => 'unl_site_creation.php',
  );
  $items['admin/sites/unl/user-audit'] = array(
    'title' => 'User Audit',
    'description' => 'Find out which sites users have access to.',
    'access arguments' => array('unl site creation'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('unl_user_audit'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'unl_site_creation.php',
  );
  $items['admin/sites/unl/wdn_registry'] = array(
    'title' => 'WDN Registry',
    'description' => 'Settings for the connection to the WDN Registry.',
    'access arguments' => array('unl site creation'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('unl_wdn_registry'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'unl_site_creation.php',
  );
  $items['admin/sites/unl/feed'] = array(
    'title' => 'Site Feed',
    'description' => 'JSON output of all UNL sites.',
    'page callback' => 'unl_sites_feed',
    'access callback' => TRUE,
    'file' => 'unl_site_creation.php',
  );

  return $items;
}

/**
 * Implementation of hook_permission().
 */
function unl_multisite_permission() {
  return array(
    'unl site creation' => array(
      'title' => t('Site Creation'),
      'description' => t('Create new Drupal sites using the UNL profile.'),
      'restrict access' => TRUE,
     ),
  );
}

/**
 * Implementation of hook_theme().
 */
function unl_multisite_theme() {
  return array(
    'unl_site_details' => array(
      'variables' => array('site_path' => NULL, 'uri' => NULL, 'db_prefix' => NULL),
      'file' => 'unl_site_creation.php',
    ),
    'unl_table' => array(
      'render element' => 'form',
      'file' => 'unl_site_creation.php',
    ),
  );
}

/**
 * Creates a db_prefix short enough to not go over MySQL's max table name length.
 */
function _unl_multisite_create_db_prefix($site_name) {
  $parent_prefix = '_' . $GLOBALS['databases']['default']['default']['prefix'];

  $site_name = strtolower($site_name);
  $site_name = preg_replace('/[^[a-z0-9]/', '_', $site_name);
  $site_name = explode('_', $site_name);
  foreach ($site_name as $site_word) {
    $site_words[$site_word] = strlen($site_word);
  }
  do {
    $db_prefix = array();
    $found = FALSE;
    foreach ($site_words as $site_word => $length) {
      $db_prefix[] = substr($site_word, 0, $length);
      if (max($site_words) == $length && !$found) {
        $found = TRUE;
        $site_words[$site_word] = $length-1;
      }
    }
    $db_prefix = implode('_', $db_prefix);
    $db_prefix = preg_replace('/_+/', '_', $db_prefix);
    $db_prefix = preg_replace('/(^_)|(_$)/', '', $db_prefix);
  } while (strlen($db_prefix . '_' . $parent_prefix) > 32);

  return $db_prefix;
}

/**
 * Checks the wdn registry for any sites that need to be imported and does so.
 */
function _unl_multisite_cron_import_wdn_registry_sites() {
  // We don't want this running as system user, only the web user.
  if (PHP_SAPI == 'cli') {
    return;
  }

  $wdn_registry_info = array(
    'database' => variable_get('unl_wdn_registry_database'),
    'username' => variable_get('unl_wdn_registry_username'),
    'password' => variable_get('unl_wdn_registry_password'),
    'host' => variable_get('unl_wdn_registry_host'),
    'driver' => 'mysql',
  );

  if (!$wdn_registry_info['database']) {
    return;
  }

  Database::addConnectionInfo('wdn_registry', 'default', $wdn_registry_info);

  try {
    db_set_active('wdn_registry');
    $data = db_select('site_request', 'r')
      ->fields('r')
      ->where('`url` IS NULL')
      ->execute()
      ->fetchAll();
    db_set_active();
  }
  catch (Exception $e) {
    db_set_active();
    return;
  }

  $sites_to_create = array();
  foreach ($data as $site) {
    $path = unl_sanitize_url_part($site->department) . '/' . unl_sanitize_url_part($site->site_name);
    $db_prefix = _unl_multisite_create_db_prefix($site->department . '/' . $site->site_name);

    $sites_to_create[$site->id] = array(
      'site_path' => $path,
      'uri' => url($path),
      'clean_url' => TRUE,
      'db_prefix' => $db_prefix,
      'site_admin' => $site->site_admin ? $site->site_admin : '',
      'migration_url' => $site->migration_url ? $site->migration_url : '',
      'migration_path' => $site->migration_path ? $site->migration_path : '',
      'department' => $site->department,
    );
  }

  foreach ($sites_to_create as $wdn_site_id => $site_to_create) {
    try {
      db_insert('unl_sites')->fields($site_to_create)->execute();
    }
    catch (PDOException $e) {
      // Ignore duplicate records.
      if ($e->getCode() != 23000) {
        throw $e;
      }
      continue;
    }

    db_set_active('wdn_registry');
    if (variable_get('unl_wdn_registry_production')) {
      db_update('site_request')
        ->fields(array('url' => $site_to_create['uri']))
        ->condition('id', $wdn_site_id)
        ->execute();
    }
    db_set_active();
  }
}

/**
 * Custom function.
 */
function _unl_multisite_send_site_created_email($site = NULL) {
  $shared_prefix = unl_get_shared_db_prefix();

  // If no site was specified, get the current site.
  if (!$site) {
    if (!is_array($GLOBALS['databases']['default']['default']['prefix'])) {
      return;
    }

    $db_prefix = $GLOBALS['databases']['default']['default']['prefix']['default'];
    $db_prefix = substr($db_prefix, 0, 0 - strlen($shared_prefix) - 1);
    $data = db_query(
      "SELECT * "
      . "FROM {$shared_prefix}unl_sites "
      . "WHERE db_prefix = :prefix ",
      array(':prefix' => $db_prefix)
    )->fetchAll();
    if (count($data) == 0) {
      return;
    }
    $site = $data[0];
  }

  $unl_site_created_email_address = unl_shared_variable_get('unl_site_created_email_address');
  $unl_site_created_alert_admins = unl_shared_variable_get('unl_site_created_alert_admins');

  $recipients = array();

  if ($unl_site_created_email_address) {
    $recipients[] = $unl_site_created_email_address;
  }

  if ($unl_site_created_alert_admins) {
    $role = user_role_load_by_name('Site Admin');
    $select = db_select('users_roles', 'r');
    $select->fields('r', array('uid'));
    $select->condition('r.rid', $role->rid);
    $uids = $select->execute()->fetchCol();

    $users = user_load_multiple($uids);
    foreach ($users as $user) {
      if (!$user->mail) {
        continue;
      }
      $recipients[] = $user->mail;
    }
  }

  foreach ($recipients as $recipient) {
    drupal_mail('unl_multisite', 'site_created', $recipient, language_default(), array('site' => $site), unl_shared_variable_get('site_mail'));
  }
}
